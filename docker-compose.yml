version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: insider-messaging-postgres
    environment:
      POSTGRES_DB: insider_messaging
      POSTGRES_USER: insider
      POSTGRES_PASSWORD: insider123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U insider -d insider_messaging"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - insider-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: insider-messaging-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - insider-network

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: insider-messaging-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - insider-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: insider-messaging-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - insider-network

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: insider-messaging-app
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=insider_messaging
      - DB_USER=insider
      - DB_PASSWORD=insider123
      - DB_SSL_MODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - LOG_LEVEL=info
      - SERVER_PORT=8080
      - PROCESSING_INTERVAL=30s
      - RETRY_INTERVAL=5m
      - WEBHOOK_TIMEOUT=30s
      - MAX_RETRIES=3
      - BACKOFF_MIN=1s
      - BACKOFF_MAX=30s
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - insider-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  insider-network:
    driver: bridge